# Global parameters
{% if samba_create_domain_controller is defined and samba_create_domain_controller %}
[global]
        dns forwarder = {{ samba_ad_info.dns_forwarder }}
        idmap_ldb:use rfc2307 = yes
        netbios name = {{ ansible_hostname|upper|truncate(15, True, '') }}
        realm = {{ samba_ad_info.kerberos_realm|upper }}
        server role = {{ samba_server_role }}
        workgroup = {{ samba_ad_info.netbios_domain_name|upper }}

{% if samba_use_printers %}
        load printers = yes
        printing = {{ samba_printer_type|upper }}
        printcap name = {{ samba_printer_type }}
        {% if samba_printer_type == 'cups' %}
        cups server = {{ samba_cups_server }}
        {% endif %}
{% endif %}

[netlogon]
	path = /var/lib/samba/sysvol/{{ samba_ad_info.kerberos_realm|lower }}/scripts
	read only = No

[sysvol]
	path = /var/lib/samba/sysvol
	read only = No
{% elif (samba_create_domain_controller is defined and not samba_create_domain_controller) or samba_create_domain_controller is not defined %}
#======================= Global Settings =======================

[global]

## Browsing/Identification ###

   workgroup = {{ samba_workgroup|upper }}
   server string = %h server (Samba, Ubuntu)
   dns proxy = no
   netbios name = {{ ansible_hostname|upper }}
   security = {{ samba_security }}

#### Networking ####

;   interfaces = 127.0.0.0/8 eth0
;   bind interfaces only = yes

#### Debugging/Accounting ####

   log file = /var/log/samba/log.%m
   max log size = 1000
   syslog = 0
   panic action = /usr/share/samba/panic-action %d


####### Authentication #######

   server role = {{ samba_server_role }}
   passdb backend = tdbsam
   obey pam restrictions = yes
   unix password sync = yes
   passwd program = /usr/bin/passwd %u
   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
   pam password change = yes
   map to guest = bad user

########## Domains ###########


############ Misc ############


#======================= Share Definitions =======================

{% endif %}
{% if samba_shares is defined %}
#======================= Share Definitions =======================

{%   for item in samba_shares %}
[{{ item.name }}]
browsable = {{ item.browsable|lower }}
guest ok = {{ item.guest_ok|lower }}
path = {{ samba_share_path }}/{{ item.name }}
{%     if item.read_only is defined %}
read only = {{ item.read_only|lower }}
{%     endif %}
{%     if item.valid_users is defined %}
valid users = {{ item.valid_users }}
{%     endif %}
writable = {{ item.writable|lower }}

{%   endfor %}
{% endif %}
