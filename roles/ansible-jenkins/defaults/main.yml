---
# defaults file for ansible-jenkins

# Defines if jenkins will be configured from templates or left as default install
config_jenkins: false

# Defines if jenkins user should have sudo rights
# (Useful for running Ansible tasks from CLI)
enable_jenkins_sudo: false

# Defines if ansible tower cli should be installed
install_tower_cli: false

# Notification e-mails from Jenkins to project owners will be sent with this
# address in the from header.
jenkins_admin_email: "admin@{{ pri_domain_name }}"

jenkins_ansible_info:
  name: Default
  home: /usr/local/bin
jenkins_apt_repo: deb http://pkg.jenkins-ci.org/debian binary/

# Whether to enable the historical Jenkins CLI mode over remoting
# (-remoting option in the client). While this may be necessary to support
# certain commands or command options, it is considered intrinsically insecure.
# (-http mode is always available, and -ssh mode is available whenever the SSH
# service is enabled.)
jenkins_cli_mode_over_remoting: false

jenkins_cli_path: "{{ jenkins_home_dir }}/jenkins-cli.jar"

jenkins_config_info:
  # AuthorizationStrategy$Unsecured or FullControlOnceLoggedInAuthorizationStrategy
  auth_strategy: FullControlOnceLoggedInAuthorizationStrategy
  disable_remember_me: false
  # Defines if setup wizard is disabled
  disable_setup_wizard: false
  num_executors: 2
  system_message: Welcome to the Jenkins lab
  use_security: true

jenkins_config_files:
  - config.xml
  - hudson.tasks.Mailer.xml
  - jenkins.CLI.xml
  - jenkins.model.JenkinsLocationConfiguration.xml
  - org.jenkinsci.plugins.ansible.AnsibleInstallation.xml
  - scriptApproval.xml

jenkins_debian_pre_req_packages:
  - default-jdk
  - default-jre-headless
  - git
  - python-pip
  - python-setuptools
  - sshpass

jenkins_email_info:
  default_suffix: "@{{ pri_domain_name }}"
  reply_to_address: "jenkins@{{ pri_domain_name }}"
  smtp_host: "smtp.{{ pri_domain_name }}"
  use_ssl: false
  smtp_port: 25

# specify the HTTP address of the Jenkins installation, such as
# http://yourhost.yourdomain/jenkins/. This value is used to let Jenkins know
# how to refer to itself, ie. to display images or to create links in emails.
jenkins_fqdn: "http://{{ ansible_hostname }}.{{ pri_domain_name }}:{{ jenkins_port }}"

jenkins_home_dir: /var/lib/jenkins

jenkins_ldap_info:
  active_directory: true
  enabled: false
  server: 192.168.202.200
  port: 389
  root_dn: DC=example,DC=org
  user_search_base: CN=Users
  manager_dn: CN=gitlab,CN=Users,DC=example,DC=org
  # This will be encrypted when saved from WebUI
  manager_password: P@55w0rd
  disable_email_address_resolver: false

# Defines if plugins will be managed using Ansible...
jenkins_manage_plugins: false

# Defines plugins to install if jenkins_manage_plugins: true
jenkins_plugins: []
  # - active-directory
  # - ansible
  # - build-pipeline-plugin
  # - git
  # - gitlab-plugin
  # - job-dsl
  # - ldap
  # - logstash
  # - PowerShell
  # - rundeck
  # - ssh
  # - travis-yml
  # - vagrant
  # - vmware-vrealize-automation-plugin
  # - vmware-vrealize-codestream
  # - vsphere-cloud
  # - workflow-aggregator

jenkins_port: 8080

jenkins_redhat_pre_req_packages:
  - git
  - java-1.7.0-openjdk
  - python-pip
  - python-setuptools
  - sshpass

jenkins_repo_key: "http://pkg.jenkins-ci.org/{{ ansible_os_family|lower }}/jenkins-ci.org.key"

jenkins_script_approvals: []
  # - method hudson.plugins.git.GitSCM getBranches
  # - method hudson.plugins.git.GitSCM getUserRemoteConfigs

pri_domain_name: example.org
