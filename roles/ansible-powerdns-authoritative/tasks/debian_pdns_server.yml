---
- name: debian_pdns_server | Installing PowerDNS Pre-Reqs
  apt:
    name: ['dnsutils', 'git', 'jq', 'python-mysqldb']
    state: present
  become: true
  register: result
  until: result is succeeded

- name: debian_pdns_server | Installing PowerDNS
  apt:
    deb: "{{ pdns_auth_download_url }}/deb/pdns-static_{{ pdns_auth_version }}_amd64.deb"
    state: present
  become: true
  notify: restart pdns
  when: >
        ansible_architecture == "x86_64" and
        pdns_auth_version != "4.x"

- name: debian_pdns_server | Installing PowerDNS
  apt:
    deb: "{{ pdns_auth_download_url }}/deb/pdns-static_{{ pdns_auth_version }}_i386.deb"
    state: present
  become: true
  register: result
  until: result is succeeded
  notify: restart pdns
  when: >
        ansible_architecture == "i386" and
        pdns_auth_version != "4.x"

- name: debian_pdns_server | Adding PowerDNS Repo Key
  apt_key:
    url: "{{ pdns_auth_repo_gpgkey }}"
    state: present
  become: true
  register: result
  until: result is succeeded
  when: pdns_auth_version == "4.x"

- name: debian_pdns_server | Pinning PowerDNS Repo
  template:
    src: pdns_repo.j2
    dest: /etc/apt/preferences.d/pdns
  become: true
  when: pdns_auth_version == "4.x"

- name: debian_pdns_server | Adding PowerDNS Repo
  apt_repository:
    repo: "deb {{ pdns_auth_repo_baseurl }}/{{ ansible_distribution|lower }} {{ ansible_distribution_release|lower }}-auth-{{ pdns_auth_short_version }} main"
    state: present
  become: true
  register: result
  until: result is succeeded
  when: >
        ansible_lsb['id'] != "Raspbian" and
        pdns_auth_version == "4.x"

- name: debian_pdns_server | Adding PowerDNS Repo
  apt_repository:
    repo: "deb {{ pdns_auth_repo_baseurl }}/raspbian {{ ansible_distribution_release|lower }}-auth-{{ pdns_auth_short_version }} main"
    state: present
  become: true
  register: result
  until: result is succeeded
  when: >
        ansible_lsb['id'] == "Raspbian" and
        pdns_auth_version == "4.x"

- name: debian_pdns_server | Installing PowerDNS Authoritative 4.x
  apt:
    name: ['pdns-server', 'pdns-backend-mysql']
    state: present
  become: true
  register: result
  until: result is succeeded
  when: pdns_auth_version == "4.x"
